package com.garvey.arithmetic.cartoon.structure;

/**
 * @Description 二叉堆
 *      1.二叉堆本质上是一种完全二叉树，它分为两个类型：
 *          ① 最大堆：最大堆的任何一个父节点的值，都大于或等于它左、右孩子节点的值。
 *          ② 最小堆：最小堆的任何一个父节点的值，都小于或等于它左、右孩子节点的值。
 *      2.二叉堆的根节点叫作堆顶。
 *      3.最大堆和最小堆的特点决定了：最大堆的堆顶是整个堆中的最大元素；最小堆的堆顶是整个堆中的最小元素。
 *      4.二叉堆的三种操作（这几种操作都基于堆的自我调整）：
 *          ① 插入节点：单一节点的"上浮"，平均交换次数是堆高度的一半，时间复杂度为O(logn)。
 *          ② 删除节点：单一节点的"下沉"，平均交换次数是堆高度的一半，时间复杂度为O(logn)。
 *          ③ 构建二叉树：需要所有非叶子节点依次"下沉"，时间复杂度为O(n)。
 *      5.二叉堆虽然是一个完全二叉树，但它的存储方式并不是链式存储，而是顺序存储。换句话说，二叉堆的所有节点都存储在数组中。
 *      6.假设父节点的下标是parent，那么它的左孩子下标就是2*parent+1，右孩子下标就是2*parent+2。
 * @Author Garvey
 * @Date 2019-09-05 23:14
 */
public class BinaryHeap {

    public static void upAdjust(int[] array) {

    }

}
